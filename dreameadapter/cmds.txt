### If you find issues with this document or have improvements, please contribute here: https://github.com/dgiese/dustbuilder-howto/

# This document describes the rooting method via U-Boot shell. Check cmds-reset.txt for the reset method

(You might want to have a firmware build before starting)

Connect via UART to your robot (115200 baud, no flow control). Make sure that the robot is powered off.
Keep the "s" key pressed on your keyboard, while powering the robot on. You should see a "sunxi#" prompt after a few seconds.

In the U-Boot shell run this commands:

setenv init /bin/sh
setenv boot_partition boot1
run setargs_nand
run boot_normal

Your robot should boot and present you a shell

After the system booted, run these commands:

/etc/init.d/sysconfig.sh
echo V > /dev/watchdog
/etc/init.d/mount_private.sh
/etc/init.d/mount_misc.sh

Check the current installed version (check "fw_arm_ver"):
cat /etc/os-release

Run these commands to print the configuration (save output):

grep "" /mnt/private/ULI/factory/*

Run these commands to save the calibration (save output, outside of the robot):

grep "" /mnt/misc/*.json
grep "" /mnt/misc/*.yaml
cat /mnt/misc/*.txt
hexdump /mnt/misc/*.bin

Make copies of the firmware encryption keys (e.g., to restore the robot to a factory state)
cat /etc/OTA_Key_pub.pem
cat /etc/publickey.pem

Make sure that you save the output of the calibration and the encryption keys before proceeding

Temporarily enable the shell and run the normal services:

mount /tmp
mkdir /tmp/fakeetc
cp -R /etc/* /tmp/fakeetc
mount --bind /tmp/fakeetc /etc
echo >> /tmp/fakeetc/inittab
echo '::respawn:-/bin/sh' >> /tmp/fakeetc/inittab
exec init

Run these commands to create binary backups:
mkdir -p /tmp/backup
tar -cvzf /tmp/backup/misc_backup.tgz -C /mnt/misc .
tar -cvzf /tmp/backup/factory.tgz -C /mnt/private/ULI/factory/ .
cp /tmp/backup/*.tgz /data/


Run this commands (replace SSID and password) to connect to your wifi (this will connect the robot to the internet and temporarily to the cloud):
wifi_cli -c "SSID" "password"

Run this commands to download an install the rooted firmware:
cd /tmp
wget {url-of-firmware.tar.gz}
tar -xzvf {name-of-firmware.tar.gz}
./install.sh

Sidenote: You can transfer the firmware via nc or via a local webserver. In that case you do not need to use wifi_cli

Download valetudo binary to /data:
https://github.com/Hypfer/Valetudo/releases
Device dependent (check our website):
1C, F9, D9: valetudo-armv7-lowmem
1T, L10 Pro, Z10 Pro: valetudo-aarch64
wget https://github.com/Hypfer/Valetudo/releases/latest/download/valetudo-armv7-lowmem -O /data/valetudo

Make valetudo executable
chmod +x /data/valetudo

Enable boot script
cp /misc/_root_postboot.sh.tpl /data/_root_postboot.sh
chmod +x /data/_root_postboot.sh

Reboot


(If you used wifi_cli, you need to delete files in /data/config/miio, reboot, connect to the robot WiFi and provision the WiFi via Valetudo):
rm /data/config/miio
reboot
- wait for the open WiFi of the robot to show up
- connect to that WiFi
- navigate to http://192.168.5.1 in your browser
- Got to settings/wifi and enter your WiFi credentials
